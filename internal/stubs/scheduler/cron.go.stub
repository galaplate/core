package scheduler

import "github.com/galaplate/core/scheduler"

// {{.StructName}} - Generated on {{.Timestamp}}
type {{.StructName}} struct{}

func ({{.StructName}}) Handle() (string, func()) {
	// Cron expression examples:
	// "@every 5s"     - every 5 seconds
	// "@every 1m"     - every minute
	// "@every 1h"     - every hour
	// "@daily"        - once a day (midnight)
	// "@weekly"       - once a week (Sunday midnight)
	// "@monthly"      - once a month (first day of month, midnight)
	// "0 30 * * * *"  - every 30 seconds
	// "0 0 12 * * *"  - every day at noon
	// "0 15 10 * * *" - 10:15 AM every day

	return "{{.Schedule}}", func() {
		// TODO: Add your scheduled task logic here

		// Example: Log a message
		// logger.Info("{{.StructName}} scheduler executed")

		// Example: Database operation
		// database.Connect.Model(&models.User{}).Where("active = ?", true).Count(&count)

		// Example: Queue a job
		// queue.Dispatch(jobs.SomeJob{UserID: 1})
	}
}

func init() {
	scheduler.RegisterScheduler("{{.CronName}}", {{.StructName}}{}.Handle)
}